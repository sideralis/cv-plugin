<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
   <extension
         id="com.infineon.cv"
         name="CV projects"
         point="org.eclipse.cdt.managedbuilder.core.buildDefinitions">
      <projectType
            id="com.infineon.cv.projectTypeBHades"
            isAbstract="false"
            name="Testcase"
            projectMacroSupplier="com.infineon.cv.includes.testcaseMacro4include">
         <configuration
               id="com.infineon.cv.configuration.hadesTCCompile"
               name="clearmake all"
               parent="com.infineon.cv.configurationHadesCompile">
            <toolChain
                  id="com.infineon.cv.toolChain.hadesCompile"
                  isAbstract="false"
                  superClass="com.infineon.cv.toolChainHades">
               <targetPlatform
                     id="com.infineon.cv.targetPlatform.hadesCompile"
                     isAbstract="false"
                     superClass="com.infineon.cv.targetPlatform">
               </targetPlatform>
               <builder
                     id="com.infineon.cv.builder.hadesCompile"
                     isAbstract="false"
                     superClass="com.infineon.cv.builderHadesCompile">
               </builder>
               <tool
                     id="com.infineon.cv.tool.hadesCompile"
                     isAbstract="false"
                     superClass="com.infineon.cv.toolHades">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               id="com.infineon.cv.configuration.hadesTCRun"
               name="clearmake run"
               parent="com.infineon.cv.configurationHadesRun">
            <toolChain
                  id="com.infineon.cv.toolChain.HadesRun"
                  isAbstract="false"
                  superClass="com.infineon.cv.toolChainHades">
               <targetPlatform
                     id="com.infineon.cv.targetPlatform.HadesRun"
                     isAbstract="false"
                     superClass="com.infineon.cv.targetPlatform">
               </targetPlatform>
               <builder
                     id="com.infineon.cv.builder.hadesRun"
                     isAbstract="false"
                     superClass="com.infineon.cv.builderHadesRun">
               </builder>
               <tool
                     id="com.infineon.cv.tool.hadesRun"
                     isAbstract="false"
                     superClass="com.infineon.cv.toolHades">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               id="com.infineon.cv.configuration.hadesTCGnumake"
               name="gnumake all"
               parent="com.infineon.cv.configurationDefault">
            <toolChain
                  id="com.infineon.cv.toolChain.hadesGnumake"
                  isAbstract="false"
                  superClass="com.infineon.cv.toolChainHades">
               <targetPlatform
                     id="com.infineon.cv.targetPlatform.hadesGnumake"
                     isAbstract="false"
                     superClass="com.infineon.cv.targetPlatform">
               </targetPlatform>
               <builder
                     id="com.infineon.cv.builder.hadesGnumake"
                     isAbstract="false"
                     superClass="com.infineon.cv.builderAll">
               </builder>
               <tool
                     id="com.infineon.cv.tool.hadesGnumake"
                     isAbstract="false"
                     superClass="com.infineon.cv.toolHades">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               id="com.infineon.cv.configuration.hadesTCLegRun"
               name="clearmake -f hades.mk run"
               parent="com.infineon.cv.configurationHadesRun">
            <toolChain
                  id="com.infineon.cv.toolChain.hadesLegRun"
                  isAbstract="false"
                  superClass="com.infineon.cv.toolChainHades">
               <targetPlatform
                     id="com.infineon.cv.targetPlatform.hadesLegRun"
                     isAbstract="false"
                     superClass="com.infineon.cv.targetPlatform">
               </targetPlatform>
               <builder
                     id="com.infineon.cv.builder.hadesLegRun"
                     isAbstract="false"
                     superClass="com.infineon.cv.builder.hadesLegRunA">
               </builder>
               <tool
                     id="com.infineon.cv.tool.hadesLegRun"
                     isAbstract="false"
                     superClass="com.infineon.cv.toolHades">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               id="com.infineon.cv.configuration.hadesTCLegCompile"
               name="clearmake -f hades.mk compile"
               parent="com.infineon.cv.configurationHadesCompile">
            <toolChain
                  id="com.infineon.cv.toolChain.hadesLegCompile"
                  isAbstract="false"
                  superClass="com.infineon.cv.toolChainHades">
               <targetPlatform
                     id="com.infineon.cv.targetPlatform.hadesLegCompile"
                     isAbstract="false"
                     superClass="com.infineon.cv.targetPlatform">
               </targetPlatform>
               <builder
                     id="com.infineon.cv.builder.hadesLegCompile"
                     isAbstract="false"
                     isVariableCaseSensitive="false"
                     superClass="com.infineon.cv.builder.hadesLegCompileA">
               </builder>
               <tool
                     id="com.infineon.cv.tool.hadesLegCompile"
                     isAbstract="false"
                     superClass="com.infineon.cv.toolHades">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            id="com.infineon.cv.projectTypeCHadesLib"
            isAbstract="false"
            name="Library"
            projectMacroSupplier="com.infineon.cv.includes.testcaseMacro4include">
         <configuration
               id="com.infineon.cv.configuration.hadesLibGnumake"
               name="gnumake lib"
               parent="com.infineon.cv.configurationDefault">
            <toolChain
                  id="com.infineon.cv.toolChain.hadesLibGnumake"
                  isAbstract="false"
                  superClass="com.infineon.cv.toolChainHades">
               <targetPlatform
                     id="com.infineon.cv.targetPlatform.hadesLibGnumake"
                     isAbstract="false"
                     superClass="com.infineon.cv.targetPlatform">
               </targetPlatform>
               <builder
                     id="com.infineon.cv.builder.hadesLibGnumake"
                     isAbstract="false"
                     superClass="com.infineon.cv.builderLib">
               </builder>
               <tool
                     id="com.infineon.cv.toolhadesLibGnumake"
                     isAbstract="false"
                     superClass="com.infineon.cv.toolHades">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            id="com.infineon.cv.projectTypeDHadesBCOTC"
            isAbstract="false"
            name="Testcase Bootcode"
            projectMacroSupplier="com.infineon.cv.includes.bootcodeMacro4include">
         <configuration
               id="com.infineon.cv.configuration.hadesBCOTCGnumake"
               name="gnumake all"
               parent="com.infineon.cv.configurationDefault">
            <toolChain
                  id="com.infineon.cv.toolChain.hadesBCOGnumake"
                  isAbstract="false"
                  superClass="com.infineon.cv.toolChainHades">
               <targetPlatform
                     id="com.infineon.cv.targetPlatform.hadesBCOGnumake"
                     isAbstract="false"
                     superClass="com.infineon.cv.targetPlatform">
               </targetPlatform>
               <builder
                     id="com.infineon.cv.builder.hadesBCOGnumake"
                     isAbstract="false"
                     superClass="com.infineon.cv.builderAll">
               </builder>
               <tool
                     id="com.infineon.cv.tool.hadesBCOGnumake"
                     isAbstract="false"
                     superClass="com.infineon.cv.toolHadesBCO">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               id="com.infineon.cv.configuration.hadesBCOTCClearmakeRun"
               name="clearmake run"
               parent="com.infineon.cv.configurationHadesRun">
            <toolChain
                  id="com.infineon.cv.toolChain.hadesBCOClearmakeRun"
                  isAbstract="false"
                  superClass="com.infineon.cv.toolChainHades">
               <targetPlatform
                     id="com.infineon.cv.targetPlatform.hadesBCOClearmakeRun"
                     isAbstract="false"
                     superClass="com.infineon.cv.targetPlatform">
               </targetPlatform>
               <builder
                     id="com.infineon.cv.builder.hadesBCOClearmakeRun"
                     isAbstract="false"
                     superClass="com.infineon.cv.builderHadesRun">
               </builder>
               <tool
                     id="com.infineon.cv.tool.hadesBCOClearmakeRun"
                     isAbstract="false"
                     superClass="com.infineon.cv.toolHadesBCO">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               id="com.infineon.cv.configuration.hadesBCOTCClearmake"
               name="clearmake all"
               parent="com.infineon.cv.configurationHadesCompile">
            <toolChain
                  id="com.infineon.cv.toolChain.hadesBCOClearmake"
                  isAbstract="false"
                  superClass="com.infineon.cv.toolChainHades">
               <targetPlatform
                     id="com.infineon.cv.targetPlatform.hadesBCOClearmake"
                     isAbstract="false"
                     superClass="com.infineon.cv.targetPlatform">
               </targetPlatform>
               <builder
                     id="com.infineon.cv.builder.hadesBCOClearmake"
                     isAbstract="false"
                     superClass="com.infineon.cv.builderHadesCompile">
               </builder>
               <tool
                     id="com.infineon.cv.tool.hadesBCOClearmake"
                     isAbstract="false"
                     superClass="com.infineon.cv.toolHadesBCO">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            id="com.infineon.cv.projectTypeEHadesMemloader"
            isAbstract="false"
            name="Memloader"
            projectMacroSupplier="com.infineon.cv.includes.memloaderMacro4include">
         <configuration
               id="com.infineon.cv.configuration.hadesMemloaderGnumake"
               name="gnumake all"
               parent="com.infineon.cv.configurationDefault">
            <toolChain
                  id="com.infineon.cv.toolChain.hadesMemloaderGnumake"
                  isAbstract="false"
                  superClass="com.infineon.cv.toolChainHades">
               <targetPlatform
                     id="com.infineon.cv.targetPlatform.hadesMemloaderGnumake"
                     isAbstract="false"
                     superClass="com.infineon.cv.targetPlatform">
               </targetPlatform>
               <builder
                     id="com.infineon.cv.builder.hadesMemloaderGnumake"
                     isAbstract="false"
                     isVariableCaseSensitive="false"
                     superClass="com.infineon.cv.builderAll">
               </builder>
               <tool
                     id="com.infineon.cv.tool.hadesMemloaderGnumake"
                     isAbstract="false"
                     superClass="com.infineon.cv.toolHadesMemloader">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            id="com.infineon.cv.projectTypeBootcodeProject"
            isAbstract="false"
            name="Bootcode"
            projectMacroSupplier="com.infineon.cv.includes.bootcodeMacro4include">
         <configuration
               id="com.infineon.cv.configurationBootcode"
               name="gnumake all"
               parent="com.infineon.cv.configurationDefault">
            <toolChain
                  id="com.infineon.cv.toolChainBootcode"
                  isAbstract="false"
                  superClass="com.infineon.cv.toolChainHades">
               <targetPlatform
                     id="com.infineon.cv.targetPlatformBootcode"
                     isAbstract="false"
                     superClass="com.infineon.cv.targetPlatform">
               </targetPlatform>
               <builder
                     id="com.infineon.cv.builderBootcode"
                     isAbstract="false"
                     superClass="com.infineon.cv.builderAll">
               </builder>
               <tool
                     id="com.infineon.cv.tool_Bootcode"
                     isAbstract="false"
                     superClass="com.infineon.cv.toolBootcode">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            artifactExtension="axf"
            cleanCommand="cleanall"
            errorParsers="com.infineon.cv.ARMErrorParser;"
            id="com.infineon.cv.configurationDefault"
            name="gnumake all abstract"
            parent="org.eclipse.cdt.build.core.prefbase.cfg">
      </configuration>
      <configuration
            artifactExtension="axf"
            cleanCommand="clean"
            errorParsers="com.infineon.cv.ARMErrorParser;"
            id="com.infineon.cv.configurationHadesCompile"
            name="clearmake all abstract">
      </configuration>
      <configuration
            artifactExtension="axf"
            cleanCommand="clean"
            errorParsers="com.infineon.cv.ARMErrorParser;"
            id="com.infineon.cv.configurationHadesRun"
            name="clearmake run abstract">
      </configuration>
      <toolChain
            id="com.infineon.cv.toolChainHades"
            isAbstract="true"
            isToolChainSupported="com.infineon.cv.toolchainsupport.HadesToolChainSupport"
            name="toolchain Hades Sysway">
      </toolChain>
      <targetPlatform
            id="com.infineon.cv.targetPlatform"
            isAbstract="true"
            name="TP">
      </targetPlatform>
      <builder
            arguments="-R --jobs=2"
            autoBuildTarget="all"
            cleanBuildTarget="cleanall"
            command="gnumake"
            errorParsers="com.infineon.cv.ARMErrorParser"
            id="com.infineon.cv.builderAll"
            incrementalBuildTarget="all"
            isAbstract="true"
            isVariableCaseSensitive="false"
            name="gnumake all Builder"
            superClass="org.eclipse.cdt.build.core.settings.default.builder"
            supportsManagedBuild="false">
      </builder>
      <builder
            arguments="-R --jobs=2"
            autoBuildTarget="lib"
            cleanBuildTarget="cleanall"
            command="gnumake"
            errorParsers="com.infineon.cv.ARMErrorParser"
            id="com.infineon.cv.builderLib"
            incrementalBuildTarget="lib"
            isAbstract="true"
            isVariableCaseSensitive="false"
            name="gnumake lib Builder"
            superClass="org.eclipse.cdt.build.core.settings.default.builder"
            supportsManagedBuild="false">
      </builder>
      <builder
            autoBuildTarget="hades_makefile"
            command="gnumake"
            id="com.infineon.cv.builderHadesMake"
            incrementalBuildTarget="hades_makefile"
            isAbstract="true"
            isVariableCaseSensitive="false"
            name="Hades Make Builder"
            superClass="org.eclipse.cdt.build.core.settings.default.builder"
            supportsManagedBuild="false">
      </builder>
      <builder
            arguments="-V -r"
            autoBuildTarget="run"
            cleanBuildTarget="cleanall"
            command="clearmake"
            errorParsers="com.infineon.cv.ARMErrorParser"
            id="com.infineon.cv.builderHadesRun"
            incrementalBuildTarget="run"
            isAbstract="true"
            isVariableCaseSensitive="false"
            name="clearmake run Builder"
            superClass="org.eclipse.cdt.build.core.settings.default.builder"
            supportsManagedBuild="false">
      </builder>
      <builder
            arguments="-V -r"
            autoBuildTarget="all"
            cleanBuildTarget="cleanall"
            command="clearmake"
            errorParsers="com.infineon.cv.ARMErrorParser"
            id="com.infineon.cv.builderHadesCompile"
            incrementalBuildTarget="all"
            isAbstract="true"
            isVariableCaseSensitive="false"
            name="clearmake all Builder"
            superClass="org.eclipse.cdt.build.core.settings.default.builder"
            supportsManagedBuild="false">
      </builder>
      <builder
            arguments="-V -r -f hades.mk"
            autoBuildTarget="compile"
            cleanBuildTarget="clean"
            command="clearmake"
            errorParsers="com.infineon.cv.ARMErrorParser"
            id="com.infineon.cv.builder.hadesLegCompileA"
            incrementalBuildTarget="compile"
            isAbstract="true"
            isVariableCaseSensitive="false"
            name="clearmake -f hades.mk compile Builder"
            superClass="org.eclipse.cdt.build.core.settings.default.builder"
            supportsManagedBuild="false">
      </builder>
      <builder
            arguments="-V -r -f hades.mk"
            autoBuildTarget="run"
            cleanBuildTarget="clean"
            command="clearmake"
            errorParsers="com.infineon.cv.ARMErrorParser"
            id="com.infineon.cv.builder.hadesLegRunA"
            incrementalBuildTarget="run"
            isAbstract="true"
            isVariableCaseSensitive="false"
            name="clearmake -f hades.mk run Builder"
            superClass="org.eclipse.cdt.build.core.settings.default.builder"
            supportsManagedBuild="false">
      </builder>
      <tool
            id="com.infineon.cv.toolHades"
            isAbstract="true"
            name="Hades tool"
            superClass="org.eclipse.cdt.build.core.settings.holder">
         <inputType
               id="com.infineon.cv.inputTypeHades"
               sourceContentType="org.eclipse.cdt.core.cSource"
               superClass="org.eclipse.cdt.build.core.settings.holder.inType">
         </inputType>
         <envVarBuildPath
               buildPathResolver="com.infineon.cv.misc.testBuildPath"
               pathType="buildpathInclude"
               variableList="ARMLIB">
         </envVarBuildPath>
         <option
               id="com.infineon.cv.optionHades"
               isAbstract="false"
               name="Include paths Hades"
               resourceFilter="all"
               superClass="org.eclipse.cdt.build.core.settings.holder.incpaths"
               valueType="includePath">
            <listOptionValue
                  builtIn="false"
                  value="${ARMINC}">
            </listOptionValue>
            <listOptionValue
                  builtIn="false"
                  value="${CV_FoundationDir}/lib/arm/inc">
            </listOptionValue>
         </option>
      </tool>
      <tool
            id="com.infineon.cv.toolHadesMemloader"
            isAbstract="true"
            name="Hades Memloader tool"
            superClass="org.eclipse.cdt.build.core.settings.holder">
         <inputType
               id="com.infineon.cv.inputTypeHadesMemloader"
               sourceContentType="org.eclipse.cdt.core.cSource"
               superClass="org.eclipse.cdt.build.core.settings.holder.inType">
         </inputType>
         <envVarBuildPath
               buildPathResolver="com.infineon.cv.misc.testBuildPath"
               pathType="buildpathInclude"
               variableList="ARMLIB">
         </envVarBuildPath>
         <option
               id="com.infineon.cv.optionHadesMemloader"
               isAbstract="false"
               name="Include paths Hades Memloader"
               resourceFilter="all"
               superClass="org.eclipse.cdt.build.core.settings.holder.incpaths"
               valueType="includePath">
            <listOptionValue
                  builtIn="false"
                  value="${ARMINC}">
            </listOptionValue>
         </option>
      </tool>
      <tool
            id="com.infineon.cv.toolHadesBCO"
            isAbstract="true"
            name="Hades BCO tool"
            superClass="org.eclipse.cdt.build.core.settings.holder"
            supportsManagedBuild="false">
         <inputType
               id="com.infineon.cv.inputTypeHadesBCO"
               sourceContentType="org.eclipse.cdt.core.cSource"
               superClass="org.eclipse.cdt.build.core.settings.holder.inType">
         </inputType>
         <envVarBuildPath
               buildPathResolver="com.infineon.cv.misc.testBuildPath"
               pathType="buildpathInclude"
               variableList="ARMLIB">
         </envVarBuildPath>
         <option
               id="com.infineon.cv.optionHadesBCO"
               isAbstract="false"
               name="Include paths Hades BCO"
               resourceFilter="all"
               superClass="org.eclipse.cdt.build.core.settings.holder.incpaths"
               valueType="includePath">
            <listOptionValue
                  builtIn="false"
                  value="${ARMINC}">
            </listOptionValue>
            <listOptionValue
                  builtIn="false"
                  value="${CV_FoundationDir}/lib/arm/inc">
            </listOptionValue>
         </option>
      </tool>
      <tool
            id="com.infineon.cv.toolBootcode"
            isAbstract="true"
            name="Bootcode tool"
            superClass="org.eclipse.cdt.build.core.settings.holder">
         <inputType
               id="com.infineon.cv.inputTypeBootcode"
               sourceContentType="org.eclipse.cdt.core.cSource"
               superClass="org.eclipse.cdt.build.core.settings.holder.inType">
         </inputType>
         <envVarBuildPath
               buildPathResolver="com.infineon.cv.misc.testBuildPath"
               pathType="buildpathInclude"
               variableList="ARMLIB">
         </envVarBuildPath>
         <option
               id="com.infineon.cv.optionMemloader"
               isAbstract="false"
               name="Include paths Bootcode"
               resourceFilter="all"
               superClass="org.eclipse.cdt.build.core.settings.holder.incpaths"
               valueType="includePath">
            <listOptionValue
                  builtIn="false"
                  value="${ARMINC}">
            </listOptionValue>
            <listOptionValue
                  builtIn="false"
                  value="${bcoRomProjectDir}/hal/inc">
            </listOptionValue>
            <listOptionValue
                  builtIn="false"
                  value="${bcoRomProjectDir}/inc">
            </listOptionValue>
            <listOptionValue
                  builtIn="false"
                  value="${bcoRomProjectDir}/drv_mem/inc">
            </listOptionValue>
            <listOptionValue
                  builtIn="false"
                  value="${bcoRomProjectDir}/bs/inc">
            </listOptionValue>
            <listOptionValue
                  builtIn="false"
                  value="${bcoRomProjectDir}/sc/inc">
            </listOptionValue>
            <listOptionValue
                  builtIn="false"
                  value="${bcoRomProjectDir}/brl/inc">
            </listOptionValue>
         </option>
      </tool>
      <tool
            id="com.infineon.cv.tool.hades.make"
            isAbstract="true"
            name="Hades Makefile Converter DO NOT USE"
            superClass="org.eclipse.cdt.build.core.settings.holder">
         <inputType
               id="com.infineon.cv.inputType.hades.make"
               sourceContentType="org.eclipse.cdt.core.cSource"
               superClass="org.eclipse.cdt.build.core.settings.holder.inType">
         </inputType>
         <option
               id="com.infineon.cv.option.hades.make"
               isAbstract="true"
               name="Include paths Hades make"
               resourceFilter="all"
               superClass="org.eclipse.cdt.build.core.settings.holder.incpaths"
               valueType="includePath">
         </option>
      </tool>
   </extension>
   <extension
         id="ARMErrorParser"
         name="ARM Error Parser"
         point="org.eclipse.cdt.core.ErrorParser">
      <errorparser
            class="com.infineon.cv.errorParsing.ARMErrorParser">
      </errorparser>
   </extension>
   <extension
         id="NatureLinkedRessources"
         name="Nature Linked Ressources"
         point="org.eclipse.core.resources.natures">
      <requires-nature
            id="org.eclipse.cdt.core.cnature">
      </requires-nature>
      <runtime>
         <run
               class="com.infineon.cv.NatureLinkedRessources">
         </run>
      </runtime>
      <options
            allowLinking="true">
      </options>
   </extension>
   <extension
         point="org.eclipse.ui.popupMenus">
      <objectContribution
            adaptable="true"
            objectClass="org.eclipse.core.resources.IProject"
            nameFilter="*"
            id="com.infineon.cv.Naturecontribution">
         <menu
               icon="icons/intel.gif"
               id="com.infineon.cv.menuInfineon"
               label="Intel"
               path="additions">
            <separator
                  name="infineonMenuseparator">
            </separator>
         </menu>
         <action
               class="com.infineon.cv.ToggleNatureAction"
               enablesFor="10"
               id="com.infineon.cv.addRemoveNatureAction"
               label="Add libraries and include links"
               menubarPath="com.infineon.cv.menuInfineon/infineonMenuseparator">
         </action>
      </objectContribution>
      <objectContribution
            adaptable="true"
            id="com.infineon.cv.addSymbols"
            nameFilter="makefile"
            objectClass="org.eclipse.core.resources.IFile">
         <action
               class="com.infineon.cv.AddSymbolAction"
               enablesFor="+"
               id="com.infineon.cv.addSymbols"
               label="add Symbols from makefile"
               menubarPath="additions">
         </action>
         <visibility>
            <not>
               <pluginState
                     id="com.infineon.cv"
                     value="installed">
               </pluginState>
            </not>
         </visibility>
      </objectContribution>
   </extension>
   <extension
         point="org.eclipse.cdt.core.language">
      <language
            class="com.infineon.cv.misc.ARMLanguage"
            id="arm"
            name="ARM Extensions">
         <contentType
               id="org.eclipse.cdt.core.cSource">
         </contentType>
         <contentType
               id="org.eclipse.cdt.core.cHeader">
         </contentType>
      </language>
   </extension>
   <extension
         id="com.infineon.cv.preferencePage1"
         name="InfineonPreferencePage1"
         point="org.eclipse.ui.preferencePages">
      <page
            class="com.infineon.cv.InfineonPreferencePage"
            id="com.infineon.cv.page1"
            name="Intel Preference">
      </page>
   </extension>
   <extension
         id="com.infineon.cv.page1.preferenceInitializer"
         name="InfineonPreferenceInitializer"
         point="org.eclipse.core.runtime.preferences">
      <initializer
            class="com.infineon.cv.AbstractPreferenceInitializer1">
      </initializer>
   </extension>
<!--   
   <extension
         id="com.infineon.cv.editorAction"
         name="editorAction"
         point="org.eclipse.ui.editorActions">
      <editorContribution
            id="com.infineon.cv.editorContribution1"
            targetID="org.eclipse.cdt.ui.editor.asm.AsmEditor">
         <action
               class="com.infineon.cv.EditorActionDelegate1"
               id="com.infineon.cv.action1"
               label="label"
               state="false"
               style="push">
         </action>
      </editorContribution>
   </extension>

   <extension
         id="com.infineon.cv.TextHoverDoc"
         name="TextHoverDoc"
         point="org.eclipse.cdt.ui.textHovers">
      <hover
            activate="true"
            class="com.infineon.cv.doc.CEditorTextHover1"
            id="com.infineon.cv.hover1">
      </hover>
   </extension>
 -->
   <extension
         point="org.eclipse.help.toc">
      <toc
            file="toc.xml"
            primary="true">
      </toc>
      <toc
            file="tocgettingstarted.xml">
      </toc>
      <toc
            file="tocreference.xml">
      </toc>
   </extension>
   <extension
         point="org.eclipse.ui.editors">
      <editor
            class="com.infineon.cv.editors.IFXMakefileEditor"
            default="true"
            filenames="makefile"
            icon="icons/makefile.gif"
            id="cvmakefileeditor"
            name="Makefile">
      </editor>
      <editor
            class="com.infineon.cv.editors.ScatterEditor"
            default="true"
            filenames="*.scf"
            id="com.infineon.cv.editor.scatter"
            name="Scatter file">
      </editor>
   </extension>
   <extension
         point="org.eclipse.debug.ui.launchConfigurationTypeImages">
      <launchConfigurationTypeImage
            configTypeID="com.infineon.cv.launchConfigurationType"
            icon="icons/intel.gif"
            id="com.infineon.cv.launchConfigurationTypeImage">
      </launchConfigurationTypeImage>
   </extension>
   <extension
         point="org.eclipse.debug.core.launchConfigurationTypes">
      <launchConfigurationType
            delegate="com.infineon.cv.launcher.LaunchIntel"
            id="com.infineon.cv.launchConfigurationType"
            modes="run,debug"
            name="Intel Testcase">
      </launchConfigurationType>
   </extension>
   <extension
         point="org.eclipse.debug.ui.launchConfigurationTabGroups">
      <launchConfigurationTabGroup
            class="com.infineon.cv.launcher.IntelLaunchConfigurationTabGroup"
            id="com.infineon.cv.launchConfigurationTabGroup"
            type="com.infineon.cv.launchConfigurationType">
      </launchConfigurationTabGroup>
   </extension>
   <extension
         point="org.eclipse.debug.ui.launchShortcuts">
      <shortcut
            class="com.infineon.cv.launcher.IntelLaunchShortcut"
            icon="icons/intel.gif"
            id="com.infineon.cv.shortcut"
            label="Intel Tescase"
            modes="run, debug">
         <description
               description="Launch a Intel CV testcase"
               mode="com.infineon.cv.intelDescription">
         </description>
         <contextualLaunch>
            <enablement>
               <with
                     variable="selection">
                  <count
                        value="1">
                  </count>
                  <iterate>
                     <or>
                        <instanceof
                              value="org.eclipse.cdt.core.model.IBinary">
                        </instanceof>
                        <instanceof
                              value="org.eclipse.cdt.core.model.ICProject">
                        </instanceof>
                        <test
                              forcePluginActivation="true"
                              property="org.eclipse.cdt.launch.isExecutable">
                        </test>
                        <test
                              forcePluginActivation="true"
                              property="org.eclipse.cdt.launch.isCProject">
                        </test>
                        <and>
                           <instanceof
                                 value="org.eclipse.ui.IFileEditorInput">
                           </instanceof>
                           <adapt
                                 type="org.eclipse.core.resources.IResource">
                              <adapt
                                    type="org.eclipse.cdt.core.model.ICElement">
                              </adapt>
                           </adapt>
                        </and>
                     </or>
                  </iterate>
               </with>
            </enablement>
         </contextualLaunch>
      </shortcut>
   </extension>
   <extension
         point="org.eclipse.ui.newWizards">
      <category
            id="com.infineon.cv.category"
            name="Intel">
      </category>
      <wizard
            canFinishEarly="false"
            category="com.infineon.cv.category"
            class="com.infineon.cv.wizard.IntelWizard"
            finalPerspective="org.eclipse.cdt.ui.CPerspective"
            hasPages="true"
            icon="icons/intel.gif"
            id="com.infineon.cv.wizard"
            name="Intel CV Project"
            project="true">
         <description>
            To create an Intel IMC CV testcase.
         </description>
      </wizard>
      <wizard
            canFinishEarly="false"
            category="com.infineon.cv.category"
            class="com.infineon.cv.wizard.IntelBCOWizard"
            finalPerspective="org.eclipse.cdt.ui.CPerspective"
            hasPages="true"
            icon="icons/intel.gif"
            id="com.infineon.cv.wizard.bootcode"
            name="Intel Bootcode Project"
            project="true">
         <description>
            To create an Intel IMC bootcode project.
         </description>
      </wizard>
   </extension>
   <extension
         point="org.eclipse.ui.navigator.navigatorContent">
      <commonWizard
            type="new"
            wizardId="com.infineon.cv.wizard">
         <enablement></enablement>
      </commonWizard>
   </extension>
   <extension
         id="product"
         name="toto"
         point="org.eclipse.core.runtime.products">
      <product
            application="com.infineon.cv.product"
            name="Toto">
         <property
               name="appName"
               value="Bernard Toto">
         </property>
      </product>
   </extension>
</plugin>

