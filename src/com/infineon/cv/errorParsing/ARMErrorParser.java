package com.infineon.cv.errorParsing;

import org.eclipse.cdt.core.IMarkerGenerator;
import org.eclipse.cdt.core.errorparsers.AbstractErrorParser;
import org.eclipse.cdt.core.errorparsers.ErrorPattern;

/**
 * The ARM error parser class. It parses the error generated by the compiler and the linker
 * 
 * @author gautier
 */
public class ARMErrorParser extends AbstractErrorParser {

	private static final ErrorPattern[] patterns = { 
		// Error during compilation
		new ARMErrorPattern("\"(.+)\", line ([\\d]+): Error: (.*)", 1, 2, 3, 0, IMarkerGenerator.SEVERITY_ERROR_BUILD),
		
		// Warning during compilation
		new ARMErrorPattern("\"(.+)\", line ([\\d]+): Warning: (.*)", 1, 2, 3, 0, IMarkerGenerator.SEVERITY_WARNING) ,
		
		// Warning during linking
		new ARMErrorPattern("(.*?)\\(line ([0-9]+), col [0-9]+\\) Warning: (.*)",1,2,3,0, IMarkerGenerator.SEVERITY_WARNING),
		
		// Error during assembly
		new ARMErrorPattern("\"(.+)\", line ([\\d]+)(.+): Error: (.*)", 1, 2, 4, 0, IMarkerGenerator.SEVERITY_ERROR_BUILD),
		
		// For this type of linking error: "Error: L6218E: Undefined symbol udelay (referred from xgold_mmc.o)"
		// FIXME does not work
		new ARMErrorPattern("Error: ((.*) (.+?)) .referred from (.*).",4,0,1,0,IMarkerGenerator.SEVERITY_ERROR_BUILD),
	};

	/**
	 * Constructor to set the error pattern.
	 */
	public ARMErrorParser() {
		super(patterns);
	}
}
